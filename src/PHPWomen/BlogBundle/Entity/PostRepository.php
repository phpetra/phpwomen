<?php

namespace PHPWomen\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
    /**
     * Get latest blog posts
     *
     * @param int $limit
     * @param int $offset
     * @return array
     */
    public function fetchLatestPosts($limit, $offset)
    {
        $q = $this->createQueryBuilder('b')
            ->orderBy('b.publishedOn', 'DESC')
            ->setMaxResults($limit)
            ->setFirstResult($offset)
            ->getQuery();

        $q->execute();

        return $q->getResult();
    }

    public function fetchPostsByCategory($category, $limit, $offset)
    {

    }

    public function fetchPostsByAuthor($author, $limit, $offset)
    {

    }

    /**
     * Get posts by one or more statusses
     *
     * @param array $status
     * @return Post[]
     */
    public function fetchPostsByStatus(array $status) {
        $qb = $this->createQueryBuilder('b');
        $q = $qb
            ->where($qb->expr()->in('b.status', $status))
            ->getQuery();

        $q->execute();

        return $q->getResult();
    }

    /**
     * Get posts between dates
     *
     * @param \DateTime $start
     * @param \DateTime $end
     * @return Post{]
     */
    public function fetchPostsBetweenDates(\DateTime $start, \DateTime $end)
    {
        $q = $this->createQueryBuilder('b')
            ->where('date >= :start')
            ->orWhere(':date <= :end')

            ->setParameter('start', $start)
            ->setParameter('end', $end)
            ->orderBy('b.id', 'ASC')
            ->getQuery();

        $q->execute();

        return $q->getResult();
    }

}
